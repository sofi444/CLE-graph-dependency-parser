Workflow

1) Load train data - Read(file_name, language, mode)
    ...iterate through data
2) Create feature map - Features.create_feature_map(train_data)

For each Sentence:

3) init graph - Graph(sentence_ob)

    For each token:

    4) Get dep attributes from lists
    
    5) Get rest of attributes (head, distance, direction, between, neighbours)
            - Features.get_X_attributes(token_id, form_list, lemma_list, pos_list...)
    
    6) Get features one arc - Features.get_features()

    7) Create feature vector for arc - Features.get_fv_one_arc()

    8) Add FV to graph




______________________________________

Change graph to include FV (+ edit CLE)

Now: 
    Graph = {
        head1: {
            dep1: score,
            dep2: score, ...
        },
        head2: {}, ...
    }

    head:str, dep:str, score:float

After:
    Graph = {
        head1: {
            dep1: { fv: [],
                    score: float
            },
            dep2: {}, ...
        },
        head2: {}, ...
    }

    head:str, dep:str, fv:list, score:float


______________________________________

After CLE edits - check that they produce the same graph

python3 src/cle_v2.py
test_sent5

    final_graph
    defaultdict(<class 'dict'>,
                {'0': {'5': {'fv': [], 'score': 53.58820043066892}},
                '1': {'6': {'fv': [], 'score': 82.68521246720381}},
                '2': {'7': {'fv': [], 'score': 85.84684590486795}},
                '3': {},
                '4': {},
                '5': {'8': {'fv': [], 'score': 87.51374955734289},
                    '9': {'fv': [], 'score': 72.94452894392177}},
                '6': {'2': {'fv': [], 'score': 98.01748474925822}},
                '7': {'4': {'fv': [], 'score': 87.54778118308883}},
                '8': {'3': {'fv': [], 'score': 94.46810951079374}},
                '9': {'1': {'fv': [], 'score': 99.30959394666341}}})


python3 src/cle.py
test_sent5

    final_graph
    defaultdict(<class 'dict'>,
                {'0': {'5': 53.58820043066892},
                '1': {'6': 82.68521246720381},
                '2': {'7': 85.84684590486795},
                '3': {},
                '4': {},
                '5': {'8': 87.51374955734289, '9': 72.94452894392177},
                '6': {'2': 98.01748474925822},
                '7': {'4': 87.54778118308883},
                '8': {'3': 94.46810951079374},
                '9': {'1': 99.30959394666341}})
    True

______________________________________

fully_connected_graph of sentence seen in training:

{'0': {'1': {'fv': [], 'score': 0.0},
       '2': {'fv': [], 'score': 0.0},
       '3': {'fv': [87, 88], 'score': 0.0},
       '4': {'fv': [], 'score': 0.0},
       '5': {'fv': [], 'score': 0.0}},
 '1': {'2': {'fv': [9], 'score': 0.0},
       '3': {'fv': [], 'score': 0.0},
       '4': {'fv': [], 'score': 0.0},
       '5': {'fv': [], 'score': 0.0}},
 '2': {'1': {'fv': [81, 26], 'score': 0.0},
       '3': {'fv': [9], 'score': 0.0},
       '4': {'fv': [], 'score': 0.0},
       '5': {'fv': [], 'score': 0.0}},
 '3': {'1': {'fv': [], 'score': 0.0},
       '2': {'fv': [85, 86], 'score': 0.0},
       '4': {'fv': [89, 90], 'score': 0.0},
       '5': {'fv': [91, 92], 'score': 0.0}},
 '4': {'1': {'fv': [23], 'score': 0.0},
       '2': {'fv': [], 'score': 0.0},
       '3': {'fv': [26], 'score': 0.0},
       '5': {'fv': [9], 'score': 0.0}},
 '5': {'1': {'fv': [], 'score': 0.0},
       '2': {'fv': [], 'score': 0.0},
       '3': {'fv': [], 'score': 0.0},
       '4': {'fv': [], 'score': 0.0}}}

gold_graph of same sentence

{'0': {'3': {'fv': [87, 88], 'score': 0.0}},
 '2': {'1': {'fv': [81, 26], 'score': 0.0}},
 '3': {'2': {'fv': [85, 86], 'score': 0.0},
       '4': {'fv': [89, 90], 'score': 0.0},
       '5': {'fv': [91, 92], 'score': 0.0}}}